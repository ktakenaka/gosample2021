// Code generated by entc, DO NOT EDIT.

package office

const (
	// Label holds the string label denoting the office type in the database.
	Label = "office"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeSamples holds the string denoting the samples edge name in mutations.
	EdgeSamples = "samples"
	// Table holds the table name of the office in the database.
	Table = "offices"
	// SamplesTable is the table that holds the samples relation/edge.
	SamplesTable = "samples"
	// SamplesInverseTable is the table name for the Sample entity.
	// It exists in this package in order to avoid circular dependency with the "sample" package.
	SamplesInverseTable = "samples"
	// SamplesColumn is the table column denoting the samples relation/edge.
	SamplesColumn = "office_id"
)

// Columns holds all SQL columns for office fields.
var Columns = []string{
	FieldID,
	FieldName,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)
